{{- $global := .Values.global }}
{{- range $cluster, $config := .Values.clusters }}
{{- $sa_name := (printf "%s-%s-connect" (include "kafka-connect.name" $) $cluster) }}

{{- if $.Values.serviceAccount.create -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  {{- with $.Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "kafka-connect.labels" $ | nindent 4 }}
  name: {{ $sa_name }}
automountServiceAccountToken: {{ $.Values.serviceAccount.automount }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ $sa_name }}-configuration-role"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: [{{- range $secret, $secret_config := $.Values.secrets -}}"{{ $secret }}",{{- end -}}]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ $sa_name }}-configuration-role-binding"
subjects:
  - kind: ServiceAccount
    name: "{{ $sa_name }}"
    namespace: {{ $.Release.Namespace }}
roleRef:
  kind: Role
  name: "{{ $sa_name }}-configuration-role"
  apiGroup: rbac.authorization.k8s.io
{{- end }}